#summary Character Controller using AS3.
#labels AS3,Examples,Character

= SEA3D Examples =

*[http://code.google.com/p/sea3d/downloads/detail?name=SEA3D%20AS3%20Examples%20%281.3-A1%29.zip Download All Examples]*

Use keys to move. Press Space to kick.
*[http://www.sunag.com.br/sea3d/examples/CharacterExample.html Preview]*

{{{
package
{
	import away3d.animators.SmoothSkeletonAnimator;
	import away3d.animators.data.AnimationSequenceBase;
	import away3d.containers.Scene3D;
	import away3d.containers.View3D;
	import away3d.debug.AwayStats;
	import away3d.entities.Mesh;
	import away3d.events.AnimatorEvent;
	import away3d.modifiers.MorphModifier;
	import away3d.morph.MorphNode;
	
	import flash.display.Sprite;
	import flash.display.StageAlign;
	import flash.display.StageScaleMode;
	import flash.events.Event;
	import flash.events.KeyboardEvent;
	import flash.events.MouseEvent;
	import flash.ui.Keyboard;
	import flash.ui.KeyboardType;
	import flash.utils.getTimer;
	
	import sunag.animation.AnimationTarget;
	import sunag.events.SEAEvent;
	import sunag.sea3d.SEA3D;
	
	[SWF(width="1024", height="632", backgroundColor="0x2f3032", frameRate="60")]
	public class CharacterExample extends Sprite
	{
		private var view:View3D;
		private var scene:Scene3D;
		private var sea3d:SEA3D;		
		private var keyState:Array = [];
		
		[Embed (source="../assets/Character.sea",mimeType="application/octet-stream")]
		private var Character:Class;
		
		public function CharacterExample()
		{
			/**
			 * Basic config.
			 * */
			
			stage.stageFocusRect = false;
			stage.showDefaultContextMenu=false;	
			stage.align = StageAlign.TOP_LEFT;
			stage.scaleMode = StageScaleMode.NO_SCALE;
			
			scene = new Scene3D();			
			
			view = new View3D(scene);			
			view.backgroundColor = stage.color;
			view.antiAlias = 4;
			addChild(view);
			addChild(new AwayStats(view));
			
			/**
			 * Init loader for Away3D.
			 * */			
			
			sea3d = new SEA3D();
			
			sea3d.addEventListener(SEAEvent.COMPLETE, onComplete);			
			sea3d.loadBytes(new Character());	
			
			/**
			 * Interactive
			 * */
			
			stage.addEventListener(KeyboardEvent.KEY_DOWN, onKeyDown);
			stage.addEventListener(KeyboardEvent.KEY_UP, onKeyUp);
		}
		
		private function onKeyDown(e:KeyboardEvent):void
		{
			keyState[e.keyCode.toString()] = true;
		}
		
		private function onKeyUp(e:KeyboardEvent):void
		{
			delete keyState[e.keyCode.toString()];
		}
		
		private function getKeyState(code:int):Boolean
		{
			return keyState[code.toString()];
		}
		
		private function onEnterFrame(e:Event):void
		{
			var mesh:Mesh = sea3d.getMesh("Player");	
			var animator:SmoothSkeletonAnimator = sea3d.getSkeletonAnimator("Player");	
			
			var running:Boolean = false;
			
			animator.timeScale = 1;
			
			if (animator.state == "pass#1")
			{
				
			}			
			else if (animator.state == "run" || animator.state == "idle")
			{								
				if (getKeyState(Keyboard.UP))
				{
					running = true;
					mesh.moveBackward(5);
				}
				if (getKeyState(Keyboard.DOWN))
				{
					running = true;
					mesh.moveForward(5);
					animator.timeScale = -1;
				}
				
				if (getKeyState(Keyboard.LEFT))
				{
					mesh.rotationY -= 5;
				}
				if (getKeyState(Keyboard.RIGHT))
				{
					mesh.rotationY += 5;
				}	
				
				if (running)
				{
					if (animator.state != "run") 
					{
						animator.play("run", 200);	
					}
				}
				else
				{
					if (animator.state != "idle") 
					{
						animator.play("idle", 333);	
					}
				}
				
				if (getKeyState(Keyboard.SPACE))
				{
					animator.play("pass#1",300);
				}
			}
					
			//view.camera.lookAt(mesh.position);
			
			view.render();
		}
		
		private function onPassDone(e:AnimatorEvent):void
		{			
			(e.animator as SmoothSkeletonAnimator).play("idle", 200);
		}
		
		private function onComplete(e:SEAEvent):void
		{		
			var animator:SmoothSkeletonAnimator = sea3d.getSkeletonAnimator("Player");
			
			animator.getSequence("pass#1").addEventListener(AnimatorEvent.SEQUENCE_DONE, onPassDone);
			animator.play("idle");									
			
			// List Sequences
			trace("<--");
			for(var i:int=0;i<animator.numSequence;i++)
				trace(animator.getSequenceName(i));
			trace("-->");
			
			/**
			 * <Camera001> Camera contained in MAX file.
			 * <bridge.get...> Using for get element.			 
			 * */						
			
			view.camera = sea3d.getCamera("Camera001");
			
			/**
			 * <bridge.container> contains all elements loaded.
			 * add objects in scene container
			 * */
			
			scene.addChild(sea3d.container);
			
			/**
			 * Start render and update.
			 * */
			
			stage.addEventListener(Event.ENTER_FRAME, onEnterFrame);
		}
	}
}
}}}